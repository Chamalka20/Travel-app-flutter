name: travelapp
description: A new Flutter project.
# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

version: 1.0.0+1

environment:
  sdk: '>=2.19.5 <3.0.0'

dependencies:
  flutter:
    sdk: flutter
 

  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  cupertino_icons: ^1.0.2
  google_fonts: ^4.0.3
  go_router: ^2.1.4
  shared_preferences: ^2.1.0
  google_sign_in: ^6.1.0
  lottie: ^1.1.0
  location: 
    git:
      url: https://github.com/781flyingdutchman/flutterlocation.git
      ref: V4
      path: packages/location
  geocoding: ^2.0.0
  http: ^0.13.4
  flutter_keyboard_visibility: ^5.4.1
  colorful_safe_area: ^1.0.0
  flutter_rating_bar: ^4.0.1
  intl: ^0.17.0
  image_picker: ^0.8.9
  firebase_core: ^2.14.0
  firebase_database: ^10.1.0
  firebase_auth: ^4.16.0
  syncfusion_flutter_maps: ^21.2.10
  cloud_firestore: ^4.8.2
  uuid: ^3.0.7
  provider: ^6.0.3
  flutter_dotenv: ^5.1.0
  flutter_bloc: ^8.1.3
  loading_animation_widget: ^1.2.0+4
  connectivity_plus:
    git:
      url: https://github.com/Chamalka20/plus_plugins.git
      ref: main
      path: packages/connectivity_plus
  get: ^4.6.6
  flutter_native_splash: ^2.4.0

dev_dependencies:
  flutter_test:
    sdk: flutter


  flutter_lints: ^2.0.0

 
  #flutter_icons:
  #image_path: "assets/images/Untitled-12.png"
  #ios: true
  #android: true
 

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  assets:
    - .env
    - assets/images/logo.png
    - assets/images/app bac.jpg
    - assets/images/Rectangle 1.png
    - assets/images/Facebook_Logo_(2019).png.webp
    - assets/images/google-logo-png-webinar-optimizing-for-success-google-business-webinar-13.png
    - assets/images/Untitled 13.png
    - assets/images/Rectangle 1 loging.png
    - assets/images/youtube logo.png
    - assets/images/143784-checklist.json
    - assets/images/hotel.png
    - assets/images/burger.png
    - assets/images/forest.png
    - assets/images/flash.png
    - assets/images/gas-pump.png
    - assets/images/location.png
    - assets/images/star.png
    - assets/images/heart.png
    - assets/images/like.png
    - assets/images/home.png
    - assets/images/map.png
    - assets/images/user.png
    - assets/images/search.png
    - assets/images/like.png
    - assets/images/homeClick.png
    - assets/images/mapClick.png
    - assets/images/searchClick.png
    - assets/images/userClick.png
    - assets/images/likeClick.png
    - assets/images/Boat-Windows-10-Wallpaper.jpg
    - assets/images/cloudy.png
    - assets/images/mostly-cloudy.png
    - assets/images/cloudsAndSun.png
    - assets/images/Partly-sunny.png
    - assets/images/Light-rain.png
    - assets/images/Mostly-Sunny-Day.png
    - assets/images/sunny.png
    - assets/images/PartlyCloudyNightV2.png
    - assets/images/MostlyCloudyNightV2.png
    - assets/images/MostlyClearNight.png
    - assets/images/N210LightRainShowersV2.png
    - assets/images/add.png
    - assets/images/camera.png
    - assets/images/add-black.png
    - assets/images/travel.png
    - assets/images/heartBlack.png
    - assets/images/dry-clean.png
    - assets/images/correct.png
    - assets/images/destination.png
    - assets/images/time-left.png
    - assets/images/chat-arrow.png
    - assets/images/chat-arrow-before.png

flutter_native_splash:
  # This package generates native code to customize Flutter's default white native splash screen
  # with background color and splash image.
  # Customize the parameters below, and run the following command in the terminal:
  # dart run flutter_native_splash:create
  # To restore Flutter's default white splash screen, run the following command in the terminal:
  # dart run flutter_native_splash:remove

  # IMPORTANT NOTE: These parameter do not affect the configuration of Android 12 and later, which
  # handle splash screens differently that prior versions of Android.  Android 12 and later must be
  # configured specifically in the android_12 section below.

  # color or background_image is the only required parameter.  Use color to set the background
  # of your splash screen to a solid color.  Use background_image to set the background of your
  # splash screen to a png image.  This is useful for gradients. The image will be stretch to the
  # size of the app. Only one parameter can be used, color and background_image cannot both be set.
  color: "#ffffff"
  #background_image: "assets/images/"

  # Optional parameters are listed below.  To enable a parameter, uncomment the line by removing
  # the leading # character.

  # The image parameter allows you to specify an image used in the splash screen.  It must be a
  # png file and should be sized for 4x pixel density.
  image: assets/images/app_logoSplash.png

  # The branding property allows you to specify an image used as branding in the splash screen.
  # It must be a png file. It is supported for Android, iOS and the Web.  For Android 12,
  # see the Android 12 section below.
  #branding: assets/images/

  # To position the branding image at the bottom of the screen you can use bottom, bottomRight,
  # and bottomLeft. The default values is bottom if not specified or specified something else.
  #branding_mode: bottom

  # The color_dark, background_image_dark, image_dark, branding_dark are parameters that set the background
  # and image when the device is in dark mode. If they are not specified, the app will use the
  # parameters from above. If the image_dark parameter is specified, color_dark or
  # background_image_dark must be specified.  color_dark and background_image_dark cannot both be
  # set.
  #color_dark: "#042a49"
  #background_image_dark: "assets/dark-background.png"
  #image_dark: assets/splash-invert.png
  #branding_dark: assets/dart_dark.png

  # From Android 12 onwards, the splash screen is handled differently than in previous versions.
  # Please visit https://developer.android.com/guide/topics/ui/splash-screen
  # Following are specific parameters for Android 12+.
  android_12:
    # The image parameter sets the splash screen icon image.  If this parameter is not specified,
    # the app's launcher icon will be used instead.
    # Please note that the splash screen will be clipped to a circle on the center of the screen.
    # App icon with an icon background: This should be 960×960 pixels, and fit within a circle
    # 640 pixels in diameter.
    # App icon without an icon background: This should be 1152×1152 pixels, and fit within a circle
    # 768 pixels in diameter.
    image: assets/images/app_logoSplash.png

    # Splash screen background color.
    #color:  "#ffffff"

    # App icon background color.
    #icon_background_color: "#111111"

    # The branding property allows you to specify an image used as branding in the splash screen.
    #branding: assets/images/brandingLogo.png

    # The image_dark, color_dark, icon_background_color_dark, and branding_dark set values that
    # apply when the device is in dark mode. If they are not specified, the app will use the
    # parameters from above.
    #image_dark: assets/android12splash-invert.png
    #color_dark: "#042a49"
    #icon_background_color_dark: "#eeeeee"

  # The android, ios and web parameters can be used to disable generating a splash screen on a given
  # platform.
  #android: false
  #ios: false
  #web: false

  # Platform specific images can be specified with the following parameters, which will override
  # the respective parameter.  You may specify all, selected, or none of these parameters:
  #color_android: "#42a5f5"
  #color_dark_android: "#042a49"
  #color_ios: "#42a5f5"
  #color_dark_ios: "#042a49"
  #color_web: "#42a5f5"
  #color_dark_web: "#042a49"
  #image_android: assets/splash-android.png
  #image_dark_android: assets/splash-invert-android.png
  #image_ios: assets/splash-ios.png
  #image_dark_ios: assets/splash-invert-ios.png
  #image_web: assets/splash-web.gif
  #image_dark_web: assets/splash-invert-web.gif
  #background_image_android: ""
  #background_image_dark_android: "assets/dark-background-android.png"
  #background_image_ios: "assets/background-ios.png"
  #background_image_dark_ios: "assets/dark-background-ios.png"
  #background_image_web: "assets/background-web.png"
  #background_image_dark_web: "assets/dark-background-web.png"
  #branding_android: assets/brand-android.png
  #branding_dark_android: assets/dart_dark-android.png
  #branding_ios: assets/brand-ios.png
  #branding_dark_ios: assets/dart_dark-ios.png
  #branding_web: assets/brand-web.gif
  #branding_dark_web: assets/dart_dark-web.gif

  # The position of the splash image can be set with android_gravity, ios_content_mode, and
  # web_image_mode parameters.  All default to center.
  #
  # android_gravity can be one of the following Android Gravity (see
  # https://developer.android.com/reference/android/view/Gravity): bottom, center,
  # center_horizontal, center_vertical, clip_horizontal, clip_vertical, end, fill, fill_horizontal,
  # fill_vertical, left, right, start, or top.
  #android_gravity: center
  #
  # ios_content_mode can be one of the following iOS UIView.ContentMode (see
  # https://developer.apple.com/documentation/uikit/uiview/contentmode): scaleToFill,
  # scaleAspectFit, scaleAspectFill, center, top, bottom, left, right, topLeft, topRight,
  # bottomLeft, or bottomRight.
  #ios_content_mode: center
  #
  # web_image_mode can be one of the following modes: center, contain, stretch, and cover.
  #web_image_mode: center

  # The screen orientation can be set in Android with the android_screen_orientation parameter.
  # Valid parameters can be found here:
  # https://developer.android.com/guide/topics/manifest/activity-element#screen
  #android_screen_orientation: sensorLandscape

  # To hide the notification bar, use the fullscreen parameter.  Has no effect in web since web
  # has no notification bar.  Defaults to false.
  # NOTE: Unlike Android, iOS will not automatically show the notification bar when the app loads.
  #       To show the notification bar, add the following code to your Flutter app:
  #       WidgetsFlutterBinding.ensureInitialized();
  #       SystemChrome.setEnabledSystemUIMode(SystemUiMode.manual, overlays: [SystemUiOverlay.bottom, SystemUiOverlay.top], );
  #fullscreen: true

  # If you have changed the name(s) of your info.plist file(s), you can specify the filename(s)
  # with the info_plist_files parameter.  Remove only the # characters in the three lines below,
  # do not remove any spaces:
  #info_plist_files:
  #  - 'ios/Runner/Info-Debug.plist'
  #  - 'ios/Runner/Info-Release.plist'


  